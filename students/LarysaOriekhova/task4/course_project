1. Метрики.
Найбільш важливими характеристиками тексту, який буде генерувати система, є простота/читабельність та повнота інформації.
Для перевірки читабельності та простоти тексту я планую застосувати бібліотеку, яка вміє рахувати декілька показників:
https://pypi.python.org/pypi/textstat
Для оцінки повноти інформації думаю використати METEOR.
Ну і, звичайно ж, буду читати текст очима для загальної оцінки адекватності системи.


2. Бейзлайн.
Для побудови бейзлайну думаю реалізувати найбільш очевидні правила на синтаксичній структурі:
- Витягнути трійки "підмет - присудок - додаток" (або двійки, якщо однієї з частин в реченні немає)
- Сполуки "прикметник - іменник" перетворити на речення "іменник є прикметник"


3. Існуючі рішення.
Систем спрощення/перефразування тексту існує досить багато.
Декілька статей, що описують побудову та/або оцінку таких систем:

https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3041424/
http://www.aclweb.org/anthology/P11-2117
https://www.cs.jhu.edu/~mdredze/publications/wiki_simple.pdf
https://ssli.ee.washington.edu/~hannaneh/papers/simplification.pdf
https://www.researchgate.net/publication/318742221_Sentence_Alignment_Methods_for_Improving_Text_Simplification_Systems
https://www.arxiv-vanity.com/papers/1803.01465/
https://cocoxu.github.io/publications/tacl2015-text-simplification-opinion.pdf

Методи, які використовуються для спрощення:
- Правила для перебудови синтаксичних структур речень
- Використання специфічних для домену синтаксичних значень слів/словосполучень
- Використання частотності n-грам та семантичних словників для заміни специфічної лексики на простішу та більш уживану
- Word Embedding Models

Також з описів існуючих систем можна взяти інформацію про датасети та метрики, які існують для цієї задачі.
